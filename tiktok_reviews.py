# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dicRoACQFvVrHyVjYmprP_AHJMz613F2
"""

!pip install pandas matplotlib seaborn wordcloud

from google.colab import files

uploaded = files.upload()  # pilih file tiktok_reviews.csv

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud, STOPWORDS

# Load Data
file_path = "tiktok_reviews.csv"
df = pd.read_csv(file_path)

# Data Cleaning
# Hapus Duplikat
df = df.drop_duplicates()

# Hapus Baris TanpaRating
df = df.dropna(subset=['score'])

# Isi Teks Kosong Jadi String Kosong
df['content'] = df['content'].fillna("")

# Normalisasi appVersion
df['appVersion'] = df['appVersion'].fillna("Unknown").astype(str).str.strip()

# Pastikan kolom tanggal jadi datetime
df['at'] = pd.to_datetime(df['at'], errors='coerce')

print("Setelah cleaning, jumlah data:", len(df))

# Analisis Rating
plt.figure(figsize=(7,5))
sns.countplot(data=df, x='score', palette='viridis')
plt.title("Distribusi Rating")
plt.xlabel("Rating")
plt.ylabel("Jumlah Review")
plt.show()

print("Rata-rata rating:", df['score'].mean())

# Tren Rating Per Bulan
df['month'] = df['at'].dt.to_period('M')
trend = df.groupby('month')['score'].mean()
plt.figure(figsize=(12,5))
trend.plot(marker='o')
plt.title("Tren Rata-rata Rating per Bulan")
plt.xlabel("Bulan")
plt.ylabel("Rata-rata Rating")
plt.show()

# Analisis Review Text
df['review_length'] = df['content'].astype(str).apply(len)
print("Panjang rata-rata review:", df['review_length'].mean())

text = " ".join(df['content'].dropna().astype(str))
stopwords = set(STOPWORDS)
wordcloud = WordCloud(width=1000, height=600, background_color='white', stopwords=stopwords).generate(text)

plt.figure(figsize=(12,6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.title("WordCloud Review")
plt.show()

# Analisis Berdasarkan Versi Aplikasi
plt.figure(figsize=(10,5))
version_mean = df.groupby('appVersion')['score'].mean().dropna().sort_values(ascending=False).head(15)
version_mean.plot(kind='bar')
plt.title("Rata-rata Rating per App Version (Top 15)")
plt.xlabel("App Version")
plt.ylabel("Rata-rata Rating")
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(10,5))
version_count = df['appVersion'].value_counts().head(15)
version_count.plot(kind='bar', color='skyblue')
plt.title("Jumlah Review per App Version (Top 15)")
plt.xlabel("App Version")
plt.ylabel("Jumlah Review")
plt.xticks(rotation=45)
plt.show()

# Analisis Engagement
plt.figure(figsize=(7,5))
sns.histplot(df['thumbsUpCount'], bins=50, kde=False)
plt.title("Distribusi Jumlah Likes pada Review")
plt.xlabel("Jumlah Likes")
plt.ylabel("Jumlah Review")
plt.xlim(0, 100)
plt.show()

top_reviews = df.sort_values(by='thumbsUpCount', ascending=False).head(10)
print("Top 10 Review dengan Likes terbanyak:")
print(top_reviews[['userName', 'score', 'thumbsUpCount', 'content']])